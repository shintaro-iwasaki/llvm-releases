#!/bin/bash

set -e -x

pushd "$TABGEN_BUILDIR"

CMAKE_CONFIGS="\
  -DLLVM_BUILD_TESTS=OFF \
  -DLLVM_INCLUDE_TESTS=OFF \
  -DLLVM_BUILD_UTILS=OFF \
  -DLLVM_INCLUDE_UTILS=OFF \
  -DLLVM_BUILD_RUNTIMES=OFF \
  -DLLVM_INCLUDE_RUNTIMES=OFF \
  -DLLVM_BUILD_EXAMPLES=OFF \
  -DLLVM_INCLUDE_EXAMPLES=OFF \
  -DLLVM_BUILD_BENCHMARKS=OFF \
  -DLLVM_INCLUDE_BENCHMARKS=OFF \
  -DLLVM_ENABLE_TERMINFO=OFF \
  -DLLVM_ENABLE_LIBXML2=OFF \
  -DLLVM_ENABLE_ZSTD=OFF \
  -DMLIR_BUILD_MLIR_C_DYLIB=0 \
  -DMLIR_ENABLE_BINDINGS_PYTHON=OFF \
  -DMLIR_ENABLE_EXECUTION_ENGINE=OFF \
  -DLLVM_BUILD_TOOLS=ON \
  -DLLVM_INCLUDE_TOOLS=ON \
  -DLLVM_ENABLE_PROJECTS=mlir \
  "

if [ x"$ARCH" == x"arm64" ] && [ x"$PLATFORM" == x"ubuntu-latest" ]; then
  CMAKE_CONFIGS="${CMAKE_CONFIGS}
  -DLLVM_ENABLE_PIC=OFF \
  -DLLVM_BUILD_STATIC=ON \
  -DLLVM_TOOL_REMARKS_SHLIB_BUILD=OFF"
# ^ static link glibc etc so that when used in a dockercross env we don't fail to find the
fi

CMAKE_CONFIGS="${CMAKE_CONFIGS} -DCMAKE_BUILD_TYPE=Release"
cmake "$SOURCE_DIR/llvm-project/llvm" $CMAKE_CONFIGS
make llvm-tblgen mlir-tblgen mlir-linalg-ods-yaml-gen mlir-pdll -j $NUM_JOBS

popd